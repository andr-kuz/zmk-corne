/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT

#define DEF 0
#define NUM 1
#define MOU 2
#define NAV 3
#define FUN 4
#define ADJ 5
#define GAM 6
#define GAN 7
#define GAF 8

&caps_word { continue-list = <UNDERSCORE MINUS BACKSPACE DELETE>; };
&sl { release-after-ms = <5000>; };
&sk { release-after-ms = <5000>; };
&lt {
    tapping-term-ms = <230>;
    quick-tap-ms = <0>;
    flavor = "hold-preferred";
};


/* 
                    bindings = <
&trans    &trans     &trans    &trans   &trans   &trans               &trans   &trans     &trans    &trans   &trans    &trans
&trans    &trans     &trans    &trans   &trans   &trans               &trans   &trans     &trans    &trans   &trans    &trans
&trans    &trans     &trans    &trans   &trans   &trans               &trans   &trans     &trans    &trans   &trans    &trans
                               &trans   &trans   &trans               &trans   &trans     &trans
                    >;
*/
/ {
    behaviors {
        ts: ts {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <230>;
            quick-tap-ms = <120>;
            bindings = <&kp>, <&kp>;
        };

        glt: glt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <230>;
            quick-tap-ms = <0>;
            bindings = <&mo>, <&kp>;
        };

        gts: gts {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <230>;
            quick-tap-ms = <150>;
            bindings = <&kp>, <&kp>;
        };

        ctrl_spc: ctrl_spc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp LCTRL>,
                <&macro_tap &kp SPACE>,
                <&macro_release &kp LCTRL>
            ;
        };

        ctrl_spc_lt: ctrl_sps_lt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&mo>, <&ctrl_spc>;
        };

        mmv {
            acceleration-exponent = <1>;
            time-to-max-speed-ms = <900>;
            delay-ms = <0>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";
                default_layer {
                        bindings = <
&kp ESC    &kp Q       &kp W       &kp E        &kp R                 &kp T                      &kp Y           &kp U           &kp I         &kp O       &kp P          &kp LBKT
&kp TAB    &ts LALT A  &ts LGUI S  &ts LCTRL D  &ts LSHIFT F          &kp G                      &kp H           &ts LSHIFT J    &ts RCTRL K   &ts LGUI L  &ts RALT SEMI  &kp DQT
&kp GRAVE  &kp Z       &kp X       &kp C        &kp V                 &kp B                      &kp N           &kp M           &kp COMMA     &kp DOT     &kp FSLH       &kp RBKT 
                                   &kp CAPS     &ctrl_spc_lt FUN 0    &lt NUM SPACE              &lt NAV ENTER   &lt MOU BSPC    &kp DELETE
                        >;
                };

                number_layer {
                        bindings = <
&kp LPAR   &kp EXCL    &kp AT    &kp HASH &kp DOLLAR &kp COMMA            &kp PERIOD &kp PRCNT  &kp CARET  &kp AMPS   &kp STAR  &kp LEFT_BRACKET
&trans     &kp N1      &kp N2    &kp N3   &kp N4     &kp N0               &kp N9     &kp N5     &kp N6     &kp N7     &kp N8    &kp DOUBLE_QUOTES
&kp RPAR   &trans      &trans    &trans   &kp QMARK  &trans               &kp MINUS  &kp PLUS   &kp UNDER  &kp EQUAL  &kp BSLH  &kp RIGHT_BRACKET
                                 &trans   &mo ADJ    &trans               &trans     &trans     &trans
                        >;
                };


                mouse_layer {
                        bindings = <
&trans     &trans      &trans      &trans       &trans        &trans                &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans       &trans
&trans     &mkp MB4    &mkp RCLK   &mkp MCLK    &mkp LCLK     &mkp MB5              &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans       &trans
&trans     &trans      &trans      &trans       &trans        &trans                &trans          &trans          &trans        &trans           &trans       &trans
                                   &trans       &trans        &trans                &mo ADJ         &trans          &trans
                    >;

                };


                navigation_layer {
                        bindings = <
&trans     &trans      &trans      &trans       &trans        &trans                &trans          &trans          &trans        &trans           &trans       &trans
&trans     &kp HOME    &kp PG_UP   &trans       &kp PG_DN     &kp END               &kp LEFT        &kp DOWN        &kp UP        &kp RIGHT        &trans       &trans
&trans     &trans      &trans      &trans       &trans        &trans                &trans          &trans          &trans        &trans           &trans       &trans
                                   &trans       &trans        &trans                &trans          &mo ADJ         &trans
                    >;

                };


                function_layer {
                        bindings = <
&trans     &trans      &trans    &trans   &trans     &trans               &trans     &trans     &trans     &trans    &trans      &trans
&kp F1     &kp F2      &kp F3    &kp F4   &kp F5     &kp F6               &kp F7     &kp F8     &kp F9     &kp F10   &kp F11     &kp F12 
&trans     &trans      &trans    &trans   &trans     &trans               &trans     &trans     &trans     &trans    &trans      &trans
                                 &trans   &trans     &mo ADJ              &trans     &trans     &trans
                        >;
                };



                adjust_layer {
                        bindings = <
&bt BT_CLR      &trans        &trans        &trans        &trans        &trans               &trans      &trans          &trans        &trans      &kp C_PLAY  &studio_unlock
&trans          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4         &kp C_PREV  &kp C_VOL_DN    &kp C_VOL_UP  &kp C_NEXT  &trans      &trans    
&tog GAM        &trans        &trans        &trans        &trans        &trans               &trans      &kp C_MUTE      &trans        &trans      &trans      &trans  
                                            &trans        &trans        &trans               &trans      &trans          &trans
                        >;
                };

                gaming_layer {
                    bindings = <
&gts TAB ESC &kp Q      &kp W     &kp E     &kp R           &kp T                &trans   &trans     &trans    &trans   &trans    &trans
&kp LSHIFT   &kp A      &kp S     &kp D     &kp F           &kp G                &trans   &trans     &trans    &trans   &trans    &trans
&kp LCTRL    &kp Z      &kp X     &kp C     &kp V           &kp B                &trans   &trans     &trans    &trans   &trans    &trans
                                  &kp LALT  &glt GAF LCTRL  &glt GAN SPACE       &mo NUM  &mo FUN    &trans
                    >;
                };

                gaming_number {
                    bindings = <
&trans    &kp N1     &kp N2    &kp N3   &kp N4   &kp N5               &trans   &trans     &trans    &trans   &trans    &trans
&trans    &kp N6     &kp N7    &kp N8   &kp N9   &kp N0               &trans   &trans     &trans    &trans   &trans    &trans
&tog GAM  &trans     &trans    &trans   &trans   &trans               &trans   &trans     &trans    &trans   &trans    &trans
                               &trans   &trans   &trans               &trans   &trans     &trans
                    >;
                };

                gaming_functional {
                    bindings = <
&trans    &kp F1     &kp F2    &kp F3   &kp F4   &kp F5               &trans   &trans     &trans    &trans   &trans    &trans
&trans    &kp F6     &kp F7    &kp F8   &kp F9   &kp F10              &trans   &trans     &trans    &trans   &trans    &trans
&tog GAM  &trans     &trans    &trans   &kp F11  &kp F12              &trans   &trans     &trans    &trans   &trans    &trans
                               &trans   &trans   &trans               &trans   &trans     &trans
                    >;
                };
         };
};

/ {
    combos {
        compatible = "zmk,combos";

        esc: esc {
            timeout-ms = <180>;
            key-positions = <19 22>;
            bindings = <&kp ESC>;
        };
/**/
/*         bspc: bspc { */
/*             timeout-ms = <250>; */
/*             key-positions = <14 32>; */
/*             bindings = <&kp BSPC>; */
/*         }; */
/**/
/*         del: del { */
/*             timeout-ms = <300>; */
/*             key-positions = <14 33>; */
/*             bindings = <&kp DEL>; */
/*         }; */
/**/
/*         enter: enter { */
/*             timeout-ms = <250>; */
/*             key-positions = <15 31>; */
/*             bindings = <&kp ENTER>; */
/*         }; */
/**/
    };
};
