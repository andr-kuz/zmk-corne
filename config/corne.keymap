/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT

#define DEF 0
#define NON 1
#define NUM 2
#define MOU 3
#define NAV 4
#define FUN 5
#define ADJ 6
#define GAM 7
#define GAN 8
#define GAF 9
#define GAJ 10

&caps_word { continue-list = <UNDERSCORE MINUS BACKSPACE DELETE>; };
&sl { release-after-ms = <5000>; };
&sk { release-after-ms = <5000>; };
&lt {
    tapping-term-ms = <250>;
    quick-tap-ms = <150>;
    flavor = "tap-preferred";
};


/* 

            untitled_layer {
                    bindings = <
&trans    &trans     &trans    &trans   &trans   &trans               &trans   &trans     &trans    &trans   &trans    &trans
&trans    &trans     &trans    &trans   &trans   &trans               &trans   &trans     &trans    &trans   &trans    &trans
&trans    &trans     &trans    &trans   &trans   &trans               &trans   &trans     &trans    &trans   &trans    &trans
                               &trans   &trans   &trans               &trans   &trans     &trans
                    >;
            };

*/
/ {
    behaviors {
        #include "behaviors_mod_morph.dtsi"
        #include "extra_keys.h"
        mmv {
            acceleration-exponent = <1>;
            time-to-max-speed-ms = <900>;
            delay-ms = <0>;
        };

        ts: ts {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            bindings = <&kp>, <&kp>;
        };

        alt: alt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            bindings = <&mo>, <&kp>;
        };

        html: html {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD TAP MACRO LAYER";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            bindings = <&mo>, <&next_layout_layer>;
        };

        next_layout_layer: next_layout_layer {
            compatible = "zmk,behavior-macro-one-param";
            label = "NEXT LAYOUT MACRO LAYER";
            #binding-cells = <1>;
            bindings = 
                <&macro_param_1to1>,
                <&to MACRO_PLACEHOLDER>,
                <&kp NEXT_LAYOUT>
            ;
        };

        kp_space: behavior_key_press_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE>;
        };

        hclm: hclm {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_SPACE_CHANGE_LAYOUT";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            bindings = 
                <&change_layout_hold &kp_space>
            ;
        };

        change_layout_hold: change_layout_hold {
            compatible = "zmk,behavior-macro-one-param";
            label = "CHANGE_LAYOUT_HOLD";
            #binding-cells = <1>;
            bindings = 
                <&kp ENGLISH_LAYOUT>,
                <&macro_param_1to1>,
                <&mo MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release &kp LAST_LAYOUT>
            ;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
&kp ESC    &kp Q       &kp W       &kp E        &kp R           &kp T              &kp Y           &kp U         &kp I        &kp O       &kp P          &kp LBKT
&kp TAB    &ts LALT A  &ts LGUI S  &ts LCTRL D  &ts LSHIFT F    &kp G              &kp H           &ts RSHIFT J  &ts RCTRL K  &ts RGUI L  &ts RALT SEMI  &kp SQT
&kp GRAVE  &kp Z       &kp X       &kp C        &kp V           &kp B              &kp N           &kp M         &kp COMMA    &kp DOT     &kp FSLH       &kp RBKT 
                                   &caps_word   &html FUN NON   &lt NUM SPACE      &alt NAV ENTER  &lt MOU BSPC  &kp DELETE
                        >;
                };

                non_english {
                                bindings = <
&trans    &trans     &trans    &trans   &trans         &trans               &trans   &trans     &trans    &trans   &trans    &trans
&trans    &trans     &trans    &trans   &trans         &trans               &trans   &trans     &trans    &trans   &trans    &trans
&kp TILDE &trans     &trans    &trans   &trans         &trans               &trans   &trans     &trans    &trans   &trans    &trans
                               &trans   &html FUN DEF  &hclm NUM SPACE      &trans   &trans     &trans
                    >;

                };

                number_layer {
                        bindings = <
&kp LPAR   &kp EXCL    &kp AT    &kp HASH &kp DOLLAR &kp COMMA            &kp PERIOD &kp PRCNT  &kp CARET  &kp AMPS   &kp STAR  &kp LEFT_BRACKET
&lt_gt     &kp N1      &kp N2    &kp N3   &kp N4     &kp N0               &kp N9     &kp N5     &kp N6     &kp N7     &kp N8    &kp DOUBLE_QUOTES
&kp RPAR   &kp QMARK   &kp FSLH  &kp PIPE &trans     &trans               &kp MINUS  &kp PLUS   &kp UNDER  &kp EQUAL  &kp BSLH  &kp RIGHT_BRACKET
                                 &trans   &trans     &trans               &trans     &mo ADJ    &trans
                        >;
                };


                mouse_layer {
                        bindings = <
&trans     &trans      &trans      &trans       &trans        &trans                &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans       &trans
&trans     &mkp MB4    &mkp RCLK   &mkp MCLK    &mkp LCLK     &mkp MB5              &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans       &trans
&trans     &trans      &trans      &trans       &trans        &trans                &trans          &trans          &trans        &trans           &trans       &trans
                                   &trans       &trans        &mo ADJ               &trans          &trans          &trans
                    >;

                };


                navigation_layer {
                        bindings = <
&trans     &trans      &trans      &trans       &trans        &trans                &trans          &trans          &trans        &trans           &trans       &trans
&trans     &kp HOME    &kp PG_UP   &trans       &kp PG_DN     &kp END               &kp LEFT        &kp DOWN        &kp UP        &kp RIGHT        &trans       &trans
&trans     &trans      &trans      &trans       &trans        &trans                &trans          &trans          &trans        &trans           &trans       &trans
                                   &trans       &mo ADJ       &trans                &trans          &trans          &trans
                    >;

                };


                function_layer {
                        bindings = <
&trans     &trans      &trans    &trans   &trans     &trans               &trans     &trans     &trans     &trans    &trans      &trans
&kp F1     &kp F2      &kp F3    &kp F4   &kp F5     &kp F6               &kp F7     &kp F8     &kp F9     &kp F10   &kp F11     &kp F12 
&trans     &trans      &trans    &trans   &trans     &trans               &trans     &trans     &trans     &trans    &trans      &trans
                                 &trans   &trans     &trans               &mo ADJ    &trans     &trans
                        >;
                };



                adjust_layer {
                        bindings = <
&bt BT_CLR      &trans        &trans        &trans        &trans        &trans               &trans      &trans          &trans        &trans      &kp C_PLAY  &studio_unlock
&trans          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4         &kp C_PREV  &kp C_VOL_DN    &kp C_VOL_UP  &kp C_NEXT  &trans      &trans    
&tog GAM        &trans        &trans        &trans        &trans        &trans               &trans      &kp C_MUTE      &trans        &trans      &trans      &trans  
                                            &trans        &trans        &trans               &trans      &trans          &trans
                        >;
                };

                gaming_layer {
                    bindings = <
&kp TAB      &kp Q      &kp W     &kp E     &kp R      &kp T                &trans   &trans     &trans    &trans   &trans    &trans
&kp LSHIFT   &kp A      &kp S     &kp D     &kp F      &kp G                &trans   &trans     &trans    &trans   &trans    &trans
&kp LCTRL    &kp Z      &kp X     &kp C     &kp V      &kp B                &trans   &trans     &trans    &trans   &trans    &tog GAM
                                  &mo GAF   &mo GAN    &kp SPACE            &mo NUM  &mo FUN    &trans
                    >;
                };

                gaming_number {
                    bindings = <
&kp ESC   &kp N1     &kp N2    &kp N3   &kp N4   &kp N5               &trans   &trans     &trans    &trans   &trans    &trans
&trans    &kp N6     &kp N7    &kp N8   &kp N9   &kp N0               &trans   &trans     &trans    &trans   &trans    &trans
&trans    &trans     &trans    &trans   &trans   &trans               &trans   &trans     &trans    &trans   &trans    &trans
                               &mo GAJ  &trans   &trans               &trans   &trans     &trans
                    >;
                };

                gaming_functional {
                    bindings = <
&trans    &kp F1     &kp F2    &kp F3   &kp F4   &kp F5               &trans   &trans     &trans    &trans   &trans    &trans
&trans    &kp F6     &kp F7    &kp F8   &kp F9   &kp F10              &trans   &trans     &trans    &trans   &trans    &trans
&trans    &kp F11    &kp F12   &trans   &trans   &trans               &trans   &trans     &trans    &trans   &trans    &trans
                               &trans   &mo GAJ  &trans               &trans   &trans     &trans
                    >;
                };

                gaming_adjust {
                    bindings = <
&trans    &trans     &trans    &trans   &trans   &trans               &trans   &trans     &trans    &trans   &trans    &trans
&trans    &trans     &trans    &trans   &trans   &trans               &trans   &trans     &trans    &trans   &trans    &trans
&tog GAM  &trans     &trans    &trans   &trans   &trans               &trans   &trans     &trans    &trans   &trans    &trans
                               &trans   &trans   &trans               &trans   &trans     &trans
                    >;
                };
         };
};

/ {
    combos {
        compatible = "zmk,combos";

        esc: esc {
            timeout-ms = <180>;
            key-positions = <19 22>;
            bindings = <&kp ESC>;
        };
/**/
/*         bspc: bspc { */
/*             timeout-ms = <250>; */
/*             key-positions = <14 32>; */
/*             bindings = <&kp BSPC>; */
/*         }; */
/**/
/*         del: del { */
/*             timeout-ms = <300>; */
/*             key-positions = <14 33>; */
/*             bindings = <&kp DEL>; */
/*         }; */
/**/
/*         enter: enter { */
/*             timeout-ms = <250>; */
/*             key-positions = <15 31>; */
/*             bindings = <&kp ENTER>; */
/*         }; */
/**/
    };
};
